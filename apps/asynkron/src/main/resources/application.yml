server:
  port: 8080
  shutdown: graceful
  ssl:
    enabled: false

management:
  endpoints.web:
    exposure.include: info, health, metrics, prometheus
    base-path: /internal/actuator
  endpoint.health.show-details: always

url:
  farskapsportal:
    base-url: ${FARSKAPSPORTAL_URL}
    api:
      base-url: ${FARSKAPSPORTAL_API_URL}
      synkronisere-signeringsstatus: /api/v1/asynkron/statussynkronisering/farskapserklaering/%s
      hente-aktoerid: /api/v1/asynkron/aktoerid/hente
  oppgave:
    base-url: ${OPPGAVEAPI_URL}
    opprette: /api/v1/oppgaver
  pdl-api:
    base-url: ${APIGW_URL}
    graphql: /pdl-api/graphql
  sts:
    base-url: ${APIGW_URL}
    security-token-service: /security-token-service/rest/v1/sts/token
  skatt:
    base-url: ${SKATT_URL}
    registrering-av-farskap: /folkeregisteret/mottak/api/registrering_av_farskap_v1.vedlegg

virksomhetssertifikat:
  prosjektid: ${VIRKSOMHETSSERTIFIKAT_PROSJEKT_ID}
  hemmelighetnavn: ${VIRKSOMHETSSERTIFIKAT_HEMMELIGHET_NAVN}
  hemmelighetversjon: ${VIRKSOMHETSSERTIFIKAT_HEMMELIGHET_VERSJON}
  passord:
    prosjektid: ${VIRKSOMHETSSERTIFIKAT_PASSORD_PROSJEKT_ID}
    hemmelighetnavn: ${VIRKSOMHETSSERTIFIKAT_PASSORD_HEMMELIGHET_NAVN}
    hemmelighetversjon: ${VIRKSOMHETSSERTIFIKAT_PASSORD_HEMMELIGHET_VERSJON}

farskapsportal.asynkron.egenskaper:
  oppdatere-signeringsstatus-min-antall-timer-etter-far-ble-sendt-til-signering: 1
  brukernotifikasjon:
    oppgavestyringsintervall: ${OPPGAVESTYRINGSINTERVALL}
    oppgavestyringsforsinkelse: ${OPPGAVESTYRINGSFORSINKELSE}
    varsle-om-uferdig-erklaering-cron: ${VARSLE_OM_UFERDIG_ERKLAERING_CRON}
    varsle-om-manglendeSigneringEtterAntallDager: ${VARSLE_OM_MANGLENDE_SIGNERING_ETTER_ANTALL_DAGER}
  arkiv:
    arkiveringsintervall: ${ARKIVERINGSINTERVALL}
    arkiveringsforsinkelse: ${ARKIVERINGSFORSINKELSE}
    deaktiveringsrate: ${DEAKTIVERINGSRATE}
    levetid-ikke-ferdigstilte-signeringsoppdrag-i-dager: 40
    levetid-oversendte-farskapserklaeringer-i-dager: ${DEAKTIVERE_OVERSENDTE_ERKLAERINGER_ETTER_ANTALL_DAGER}
    levetid-erklaeringer-ikke-signert-av-mor-i-dager: 1
  oppgave:
    maks-antall-oppgaver-per-dag: 10
    vurdere-opprettelse: ${VURDERE_OPPGAVE_INTERVALL}
  skatt:
    maks-antall-forbindelser: 5
    maks-antall-forbindelser-per-rute: 5
    maks-ventetid-lesing: 120000
    maks-ventetid-forbindelse: 130000

AZURE_BASE: https://login.microsoftonline.com/

no.nav.security.jwt:
  common:
    token-endpoint-url: ${AZURE_BASE}/${AZURE_APP_TENANT_ID}/oauth2/v2.0/token
  client.registration:
    farskapsportal-api:
      token-endpoint-url: ${no.nav.security.jwt.common.token-endpoint-url}
      grant-type: client_credentials
      scope: api://${FARSKAPSPORTAL_API_SCOPE}/.default
      authentication:
        client-id: ${AZURE_APP_CLIENT_ID}
        client-secret: ${AZURE_APP_CLIENT_SECRET}
        client-auth-method: client_secret_basic
    oppgave:
      token-endpoint-url: ${no.nav.security.jwt.common.token-endpoint-url}
      grant-type: client_credentials
      scope: api://${OPPGAVE_SCOPE}/.default
      authentication:
        client-id: ${AZURE_APP_CLIENT_ID}
        client-secret: ${AZURE_APP_CLIENT_SECRET}
        client-auth-method: client_secret_basic
  issuer.aad:
    discovery_url: ${AZURE_BASE}/${AZURE_APP_TENANT_ID}/v2.0/.well-known/openid-configuration
    accepted_audience: ${AZURE_APP_CLIENT_ID}, api://${AZURE_APP_CLIENT_ID}

---
spring:
  config.activate.on-profile: live
  cloud.gcp.sql.database-name: ${DB_NAME}
  cloud.gcp.sql.instance-connection-name: ${POSTGRES_CONNECTION_NAME}
  datasource:
    username: ${POSTGRES_USER_NAME}
    password: ${POSTGRES_USER_PASSWORD}
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      idle-timeout: 10001
      max-lifetime: 30001
      connectionTimeout: 1000
      maximum-pool-size: 10
      minimum-idle: 1
  jpa:
    hibernate.connection.provider_class: org.hibernate.hikaricp.internal.HikariCPConnectionProvider
    properties.hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
  devtools.add-properties: false
---
spring:
  config.activate.on-profile: test, local, scheduled-test, skatt-ssl-test
  cloud.gcp.sql.enabled: false
  flyway.enabled: false
  datasource.type: com.zaxxer.hikari.HikariDataSource
  datasource.url: jdbc:h2:mem:default
  h2.console.enabled: true
  jpa.hibernate.hbmddl-auto: create-drop
server:
  ssl:
    enabled: false

SRVFARSKAPSPORTAL_PWD: top_hemmelig
DEAKTIVERINGSRATE: "1 * * * * ?"
DEAKTIVERE_OVERSENDTE_ERKLAERINGER_ETTER_ANTALL_DAGER: 1
WIREMOCK_URL: http://localhost:${wiremock.server.port}

wiremock.server:
  files: classpath:/__files
  stubs: classpath:/mappings

AZURE_APP_TENANT_ID: aad
AZURE_BASE: http://localhost:${mock-oauth2-server.port}/${AZURE_APP_TENANT_ID}

no.nav.security.jwt:
  client.registration:
    farskapsportal-api:
      token-endpoint-url: ${AZURE_BASE}
    oppgave:
      token-endpoint-url: ${AZURE_BASE}
  issuer.aad:
    discoveryurl: ${AZURE_BASE}/.well-known/openid-configuration
    acceptedaudience: aud-localhost
    cookiename: localhost-idtoken

url:
  farskapsportal.api.base-url: ${WIREMOCK_URL}
  oppgave.base-url: ${WIREMOCK_URL}
  sts.base-url: ${WIREMOCK_URL}
  skatt.base-url: http://localhost:8080

---
spring.config.activate.on-profile: skatt-ssl-test

# SSL-oppsett med selfsigned server og klient-sertifikat for SkattStubController.
# Brukes av SkattConsumerSslTest.
server:
  port: 9002
  ssl:
    enabled: true
    client-auth: need
    key-store: classpath:server-selfsigned.jks
    key-store-password: qwer1234
    key-alias: nt-ms
    key-store-type: JKS
    key-store-provider: SUN
    trust-store: classpath:server-selfsigned.jks
    trust-store-password: qwer1234
    turst-store-type: JKS

sertifikat:
  passord: qwer1234
  keystore-type: jks
  keystore-name: client-selfsigned.jks

---
spring.config.activate.on-profile: test, scheduled-test, skatt-ssl-test
farskapsportal.asynkron.egenskaper.arkiv.arkiveringsintervall: 600
farskapsportal.asynkron.egenskaper.arkiv.arkiveringsforsinkelse: 200
farskapsportal.asynkron.egenskaper.brukernotifikasjon.oppgavestyringsforsinkelse: 1
farskapsportal.asynkron.egenskaper.brukernotifikasjon.oppgavestyringsintervall: "* * 1 * * ?"
farskapsportal.asynkron.egenskaper.brukernotifikasjon.varsle-om-uferdig-erklaering-cron: "* * 1 * * ?"
farskapsportal.asynkron.egenskaper.oppgave.vurdere-opprettelse: "* * 1 * * ?"
---
spring.config.activate.on-profile: local
farskapsportal.asynkron.egenskaper.arkiv.arkiveringsintervall: 600
farskapsportal.asynkron.egenskaper.arkiv.arkiveringsforsinkelse: 200
farskapsportal.asynkron.egenskaper.brukernotifikasjon.oppgavestyringsforsinkelse: 1
farskapsportal.asynkron.egenskaper.brukernotifikasjon.oppgavestyringsintervall: "0 0/30 * * * ?"
farskapsportal.asynkron.egenskaper.brukernotifikasjon.varsle-om-uferdig-erklaering-cron: "0 0/30 * * * ?"
farskapsportal.asynkron.egenskaper.oppgave.vurdere-opprettelse: "* * 1 * * ?"
---
spring.config.activate.on-profile: integration-test

SKATT_URL: https://folkeregisteret-api-ekstern.sits.no

virksomhetssertifikat:
  prosjektid: 627047445397
  hemmelighetnavn: virksomhetssertifikat-test
  hemmelighetversjon: 2
  passord:
    prosjektid: 627047445397
    hemmelighetnavn: farskap-keystore-credentials-json
    hemmelighetversjon: 2

---
spring.config.activate.on-profile: local

# Lokal profil bruker selvstendige wiremocks
wiremock.server:
  port: 0
  files: classpath:/__files
  stubs: classpath:/mappings


